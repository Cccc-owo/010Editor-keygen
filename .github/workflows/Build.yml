# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake Build

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: |
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: 010Editor-keygen # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: | 
          ${{github.workspace}}/build/Release/010Editor-keygen.exe
          ${{github.workspace}}/disableDetection.reg

  nightly-release:
    permissions: write-all
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/') != true
    steps:
      - uses: actions/download-artifact@v4

      - name: List directory
        # List the contents of the directory to verify the build artifact is present
        run: |
          ls -r

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "nightly-release"
          prerelease: true
          title: "CI Build"
          files: |
            010Editor-keygen/010Editor-keygen.exe
            010Editor-keygen/disableDetection.reg

  release:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4

      - name: List directory
        # List the contents of the directory to verify the build artifact is present
        run: |
          ls -r

      - name: Release Action
        uses: softprops/action-gh-release@v2
        with:
          files: |
            010Editor-keygen/010Editor-keygen.exe
            010Editor-keygen/disableDetection.reg